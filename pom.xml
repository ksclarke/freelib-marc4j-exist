<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>freelib-marc4j-exist</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>FreeLib-MARC4J eXist-db Module</name>
  <description>A MARC extension for the eXist database</description>
  <url>https://github.com/ksclarke/freelib-marc4j-exist</url>

  <licenses>
    <license>
      <name>GNU Lesser General Public License, Version 2.1</name>
      <url>http://www.gnu.org/licenses/lgpl-2.1.html</url>
      <comments>Licensed under the GNU LGPL 2.1 or later (at your option)</comments>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:ksclarke/freelib-marc4j-exist.git</connection>
    <developerConnection>scm:git:git@github.com:ksclarke/freelib-marc4j-exist.git</developerConnection>
    <url>git@github.com:ksclarke/freelib-marc4j-exist.git</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/ksclarke/freelib-marc4j-exist/issues</url>
  </issueManagement>

  <developers>
    <developer>
      <email>ksclarke@gmail.com</email>
      <name>Kevin S. Clarke</name>
      <url>http://kevinclarke.info</url>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/New_York</timezone>
    </developer>
  </developers>

  <properties>
    <!-- The below exist-db variables can be overridden via settings.xml (https://maven.apache.org/settings.html) -->
    <exist.home>/opt/exist-db</exist.home>
    <!-- If you override the 'admin' username with another user, make sure the other user has DBA privileges -->
    <exist.username>admin</exist.username>
    <!-- If you haven't set a user/admin password, don't add the 'exist.password' element to your settings.xml file -->
    <exist.password>EMPTY</exist.password>
    <!-- Version numbers of related software / libraries; you shouldn't need to change anything beneath this point -->
    <exist.db.version>2.2</exist.db.version>

    <freelib.utils.version>0.5.0</freelib.utils.version>
    <freelib.marc4j.version>2.6.7</freelib.marc4j.version>

    <sl4j.log4j.version>1.7.10</sl4j.log4j.version>
    <maven.jar.plugin.version>2.5</maven.jar.plugin.version>
    <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
    <maven.assembly.plugin.version>2.5.3</maven.assembly.plugin.version>
    <copy.rename.maven.plugin.version>1.0</copy.rename.maven.plugin.version>

    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.exist-db</groupId>
      <artifactId>existdb-core</artifactId>
      <version>${exist.db.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>info.freelibrary</groupId>
      <artifactId>freelib-marc4j</artifactId>
      <version>${freelib.marc4j.version}</version>
    </dependency>
  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/xqueries</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}/xq</targetPath>
      </testResource>
    </testResources>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <targetPath>${project.build.directory}/xar</targetPath>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>set-system-properties</goal>
            </goals>
            <configuration>
              <properties>
                <property>
                  <name>log4j.configuration</name>
                  <value>file:./src/test/resources/log4j.xml</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- We have Bash tests so don't want to disable all tests, just Surefire's Java-based test -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <!-- Copy our dependencies into the space from which we build our XAR deployment file -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>info.freelibrary</groupId>
                  <artifactId>freelib-marc4j</artifactId>
                  <version>${freelib.marc4j.version}</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/xar/content</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>info.freelibrary</groupId>
                  <artifactId>freelib-utils</artifactId>
                  <version>${freelib.utils.version}</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${project.build.directory}/xar/content</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- This plugin creates the XAR file, comes before copy-rename-maven-plugin -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/xar.xml</descriptor>
          </descriptors>
          <finalName>${project.artifactId}-${project.version}.xar</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <!-- Don't attach artifact because we want to change its extension -->
          <attach>false</attach>
        </configuration>
        <executions>
          <execution>
            <id>assemble-xar</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <executions>
          <execution>
            <id>build-code-jar</id>
            <goals>
              <goal>jar</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <classesDirectory>target/classes</classesDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy our build artifact JAR file into the space from which we build our XAR deployment file -->
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>${copy.rename.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-file</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${project.build.directory}/${project.artifactId}-${project.version}.jar</sourceFile>
              <destinationFile>${project.build.directory}/xar/content/${project.artifactId}-${project.version}.jar</destinationFile>
            </configuration>
          </execution>
          <execution>
            <id>rename-to-xar</id>
            <phase>package</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <sourceFile>${project.build.directory}/${project.artifactId}-${project.version}.xar.zip</sourceFile>
              <destinationFile>${project.build.directory}/${project.artifactId}-${project.version}.xar</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>default-install</id>
            <phase>install</phase>
            <goals>
              <goal>install</goal>
            </goals>
            <configuration>
              <!-- Skip the installation of the JAR file -->
              <skip>true</skip>
            </configuration>
          </execution>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <!-- Instead install our XAR file -->
              <packaging>xar</packaging>
              <pomFile>pom.xml</pomFile>
              <repositoryId>sonatype-nexus-snapshots</repositoryId>
              <url>https://oss.sonatype.org/service/local/repositories/snapshots/content</url>
              <artifactId>${project.artifactId}</artifactId>
              <groupId>${project.groupId}</groupId>
              <version>${project.version}</version>
              <file>${project.build.directory}/${project.artifactId}-${project.version}.xar</file>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven.deploy.plugin.version}</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
            <configuration>
              <!-- Skip deployment of the JAR file -->
              <skip>true</skip>
            </configuration>
          </execution>
          <execution>
            <phase>deploy</phase>
            <goals>
              <goal>deploy-file</goal>
            </goals>
            <configuration>
              <!-- Deploy the XAR file instead -->
              <packaging>xar</packaging>
              <generatePom>false</generatePom>
              <repositoryId>sonatype-nexus-snapshots</repositoryId>
              <url>https://oss.sonatype.org/service/local/repositories/snapshots/content</url>
              <artifactId>${project.artifactId}</artifactId>
              <groupId>${project.groupId}</groupId>
              <version>${project.version}</version>
              <file>${project.build.directory}/${project.artifactId}-${project.version}.xar</file>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Get two free ports for our test server to use -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>info.freelibrary</groupId>
        <artifactId>freelib-utils</artifactId>
        <version>${freelib.utils.version}</version>
        <executions>
          <execution>
            <id>set-stop-key</id>
            <goals>
              <goal>set-uuid-property</goal>
            </goals>
            <configuration>
              <name>jetty.stop.key</name>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <dependencies>
          <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${sl4j.log4j.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <stopPort>${http.port.stop}</stopPort>
          <stopKey>${jetty.stop.key}</stopKey>
          <stopWait>10</stopWait>
          <httpConnector>
            <port>${http.port}</port>
          </httpConnector>
          <webAppSourceDirectory>target</webAppSourceDirectory>
          <webApp>
            <contextPath>/</contextPath>
          </webApp>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
            </configuration>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>load-xar-for-testing</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${basedir}/src/test/scripts/load.sh</argument>
              </arguments>
              <environmentVariables>
                <EXIST_HOME>${exist.home}</EXIST_HOME>
                <EXIST_USERNAME>${exist.username}</EXIST_USERNAME>
                <EXIST_PASSWORD>${exist.password}</EXIST_PASSWORD>
                <MAVEN_BASEDIR>${basedir}</MAVEN_BASEDIR>
              </environmentVariables>
            </configuration>
          </execution>
          <execution>
            <id>test-xar-code</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>bash</executable>
              <arguments>
                <argument>${basedir}/src/test/scripts/test.sh</argument>
              </arguments>
              <environmentVariables>
                <EXIST_HOME>${exist.home}</EXIST_HOME>
                <EXIST_USERNAME>${exist.username}</EXIST_USERNAME>
                <EXIST_PASSWORD>${exist.password}</EXIST_PASSWORD>
                <MAVEN_BASEDIR>${basedir}</MAVEN_BASEDIR>
              </environmentVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Plugin to generate JavaDocs -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <!-- Plugin to run Sonar analysis -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <!-- Checks project's code for conformance to coding standards -->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <!-- Plugin to enforce some rules about the project -->
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Plugin to generate the project's website -->
      <plugin>
        <groupId>br.com.ingenieux</groupId>
        <artifactId>jbake-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <!-- Enables pushing project documentation up to an S3 bucket -->
  <distributionManagement>
    <site>
      <id>s3.site</id>
      <url>s3://projects.freelibrary.info/freelib-marc4j-exist</url>
    </site>
  </distributionManagement>

  <!-- Pulls in standard FreeLibrary Project configuration options -->
  <parent>
    <groupId>info.freelibrary</groupId>
    <artifactId>freelib-parent</artifactId>
    <version>0.1.3</version>
  </parent>

  <repositories>
    <!-- Can't check this into Maven Central as long as we have external repositories -->
    <repository>
      <id>exist</id>
      <url>https://raw.github.com/eXist-db/mvn-repo/master/</url>
    </repository>
  </repositories>

</project>
